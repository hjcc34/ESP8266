

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Nov 02 22:05:15 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,space=0,delta=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F628A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0004                     fsr             equ	4
    58     0004                     fsr0            equ	4
    59     0000                     indf            equ	0
    60     0000                     indf0           equ	0
    61     0002                     pc              equ	2
    62     0002                     pcl             equ	2
    63     000A                     pclath          equ	10
    64     0003                     status          equ	3
    65     0000                     INDF            equ	0	;# 
    66     0001                     TMR0            equ	1	;# 
    67     0002                     PCL             equ	2	;# 
    68     0003                     STATUS          equ	3	;# 
    69     0004                     FSR             equ	4	;# 
    70     0005                     PORTA           equ	5	;# 
    71     0006                     PORTB           equ	6	;# 
    72     000A                     PCLATH          equ	10	;# 
    73     000B                     INTCON          equ	11	;# 
    74     000C                     PIR1            equ	12	;# 
    75     000E                     TMR1            equ	14	;# 
    76     000E                     TMR1L           equ	14	;# 
    77     000F                     TMR1H           equ	15	;# 
    78     0010                     T1CON           equ	16	;# 
    79     0011                     TMR2            equ	17	;# 
    80     0012                     T2CON           equ	18	;# 
    81     0015                     CCPR1           equ	21	;# 
    82     0015                     CCPR1L          equ	21	;# 
    83     0016                     CCPR1H          equ	22	;# 
    84     0017                     CCP1CON         equ	23	;# 
    85     0018                     RCSTA           equ	24	;# 
    86     0019                     TXREG           equ	25	;# 
    87     001A                     RCREG           equ	26	;# 
    88     001F                     CMCON           equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISA           equ	133	;# 
    91     0086                     TRISB           equ	134	;# 
    92     008C                     PIE1            equ	140	;# 
    93     008E                     PCON            equ	142	;# 
    94     0092                     PR2             equ	146	;# 
    95     0098                     TXSTA           equ	152	;# 
    96     0099                     SPBRG           equ	153	;# 
    97     009A                     EEDATA          equ	154	;# 
    98     009B                     EEADR           equ	155	;# 
    99     009C                     EECON1          equ	156	;# 
   100     009D                     EECON2          equ	157	;# 
   101     009F                     VRCON           equ	159	;# 
   102     0000                     INDF            equ	0	;# 
   103     0001                     TMR0            equ	1	;# 
   104     0002                     PCL             equ	2	;# 
   105     0003                     STATUS          equ	3	;# 
   106     0004                     FSR             equ	4	;# 
   107     0005                     PORTA           equ	5	;# 
   108     0006                     PORTB           equ	6	;# 
   109     000A                     PCLATH          equ	10	;# 
   110     000B                     INTCON          equ	11	;# 
   111     000C                     PIR1            equ	12	;# 
   112     000E                     TMR1            equ	14	;# 
   113     000E                     TMR1L           equ	14	;# 
   114     000F                     TMR1H           equ	15	;# 
   115     0010                     T1CON           equ	16	;# 
   116     0011                     TMR2            equ	17	;# 
   117     0012                     T2CON           equ	18	;# 
   118     0015                     CCPR1           equ	21	;# 
   119     0015                     CCPR1L          equ	21	;# 
   120     0016                     CCPR1H          equ	22	;# 
   121     0017                     CCP1CON         equ	23	;# 
   122     0018                     RCSTA           equ	24	;# 
   123     0019                     TXREG           equ	25	;# 
   124     001A                     RCREG           equ	26	;# 
   125     001F                     CMCON           equ	31	;# 
   126     0081                     OPTION_REG      equ	129	;# 
   127     0085                     TRISA           equ	133	;# 
   128     0086                     TRISB           equ	134	;# 
   129     008C                     PIE1            equ	140	;# 
   130     008E                     PCON            equ	142	;# 
   131     0092                     PR2             equ	146	;# 
   132     0098                     TXSTA           equ	152	;# 
   133     0099                     SPBRG           equ	153	;# 
   134     009A                     EEDATA          equ	154	;# 
   135     009B                     EEADR           equ	155	;# 
   136     009C                     EECON1          equ	156	;# 
   137     009D                     EECON2          equ	157	;# 
   138     009F                     VRCON           equ	159	;# 
   139     0000                     INDF            equ	0	;# 
   140     0001                     TMR0            equ	1	;# 
   141     0002                     PCL             equ	2	;# 
   142     0003                     STATUS          equ	3	;# 
   143     0004                     FSR             equ	4	;# 
   144     0005                     PORTA           equ	5	;# 
   145     0006                     PORTB           equ	6	;# 
   146     000A                     PCLATH          equ	10	;# 
   147     000B                     INTCON          equ	11	;# 
   148     000C                     PIR1            equ	12	;# 
   149     000E                     TMR1            equ	14	;# 
   150     000E                     TMR1L           equ	14	;# 
   151     000F                     TMR1H           equ	15	;# 
   152     0010                     T1CON           equ	16	;# 
   153     0011                     TMR2            equ	17	;# 
   154     0012                     T2CON           equ	18	;# 
   155     0015                     CCPR1           equ	21	;# 
   156     0015                     CCPR1L          equ	21	;# 
   157     0016                     CCPR1H          equ	22	;# 
   158     0017                     CCP1CON         equ	23	;# 
   159     0018                     RCSTA           equ	24	;# 
   160     0019                     TXREG           equ	25	;# 
   161     001A                     RCREG           equ	26	;# 
   162     001F                     CMCON           equ	31	;# 
   163     0081                     OPTION_REG      equ	129	;# 
   164     0085                     TRISA           equ	133	;# 
   165     0086                     TRISB           equ	134	;# 
   166     008C                     PIE1            equ	140	;# 
   167     008E                     PCON            equ	142	;# 
   168     0092                     PR2             equ	146	;# 
   169     0098                     TXSTA           equ	152	;# 
   170     0099                     SPBRG           equ	153	;# 
   171     009A                     EEDATA          equ	154	;# 
   172     009B                     EEADR           equ	155	;# 
   173     009C                     EECON1          equ	156	;# 
   174     009D                     EECON2          equ	157	;# 
   175     009F                     VRCON           equ	159	;# 
   176     001A                     _RCREG          set	26
   177     0019                     _TXREG          set	25
   178     0018                     _RCSTAbits      set	24
   179     000B                     _INTCONbits     set	11
   180     001F                     _CMCON          set	31
   181     0006                     _PORTB          set	6
   182     0005                     _PORTA          set	5
   183     0006                     _PORTBbits      set	6
   184     000C                     _PIR1bits       set	12
   185     0099                     _SPBRG          set	153
   186     0098                     _TXSTAbits      set	152
   187     0086                     _TRISBbits      set	134
   188     008C                     _PIE1bits       set	140
   189     0081                     _OPTION_REGbits set	129
   190     0086                     _TRISB          set	134
   191     0085                     _TRISA          set	133
   192                           
   193                           	psect	strings
   194     0139                     __pstrings:
   195     0139                     stringtab:
   196     0139                     __stringtab:
   197     0139                     stringcode:	
   198                           ;	String table - string pointers are 1 byte each
   199                           
   200     0139                     stringdir:
   201     0139  3001               	movlw	high stringdir
   202     013A  008A               	movwf	10
   203     013B  0804               	movf	4,w
   204     013C  0A84               	incf	4,f
   205     013D  0782               	addwf	2,f
   206     013E                     __stringbase:
   207     013E  3400               	retlw	0
   208     013F                     __end_of__stringtab:
   209     013F                     STR_6:
   210     013F  3441               	retlw	65	;'A'
   211     0140  3454               	retlw	84	;'T'
   212     0141  342B               	retlw	43	;'+'
   213     0142  3443               	retlw	67	;'C'
   214     0143  3457               	retlw	87	;'W'
   215     0144  344D               	retlw	77	;'M'
   216     0145  344F               	retlw	79	;'O'
   217     0146  3444               	retlw	68	;'D'
   218     0147  3445               	retlw	69	;'E'
   219     0148  345F               	retlw	95	;'_'
   220     0149  3444               	retlw	68	;'D'
   221     014A  3445               	retlw	69	;'E'
   222     014B  3446               	retlw	70	;'F'
   223     014C  343D               	retlw	61	;'='
   224     014D  3431               	retlw	49	;'1'
   225     014E  340D               	retlw	13
   226     014F  340A               	retlw	10
   227     0150  3400               	retlw	0
   228     0151                     STR_8:
   229     0151  3444               	retlw	68	;'D'
   230     0152  3449               	retlw	73	;'I'
   231     0153  3447               	retlw	71	;'G'
   232     0154  3449               	retlw	73	;'I'
   233     0155  3446               	retlw	70	;'F'
   234     0156  3449               	retlw	73	;'I'
   235     0157  3442               	retlw	66	;'B'
   236     0158  3452               	retlw	82	;'R'
   237     0159  3441               	retlw	65	;'A'
   238     015A  342D               	retlw	45	;'-'
   239     015B  3436               	retlw	54	;'6'
   240     015C  3450               	retlw	80	;'P'
   241     015D  3452               	retlw	82	;'R'
   242     015E  344E               	retlw	78	;'N'
   243     015F  3400               	retlw	0
   244     0160                     STR_7:
   245     0160  3441               	retlw	65	;'A'
   246     0161  3454               	retlw	84	;'T'
   247     0162  342B               	retlw	43	;'+'
   248     0163  3443               	retlw	67	;'C'
   249     0164  3457               	retlw	87	;'W'
   250     0165  344A               	retlw	74	;'J'
   251     0166  3441               	retlw	65	;'A'
   252     0167  3450               	retlw	80	;'P'
   253     0168  345F               	retlw	95	;'_'
   254     0169  3444               	retlw	68	;'D'
   255     016A  3445               	retlw	69	;'E'
   256     016B  3446               	retlw	70	;'F'
   257     016C  343D               	retlw	61	;'='
   258     016D  3400               	retlw	0
   259     016E                     STR_9:
   260     016E  346B               	retlw	107	;'k'
   261     016F  3473               	retlw	115	;'s'
   262     0170  3448               	retlw	72	;'H'
   263     0171  3437               	retlw	55	;'7'
   264     0172  3434               	retlw	52	;'4'
   265     0173  3434               	retlw	52	;'4'
   266     0174  3434               	retlw	52	;'4'
   267     0175  3432               	retlw	50	;'2'
   268     0176  3465               	retlw	101	;'e'
   269     0177  3479               	retlw	121	;'y'
   270     0178  3400               	retlw	0
   271     0179                     STR_3:
   272     0179  3445               	retlw	69	;'E'
   273     017A  3452               	retlw	82	;'R'
   274     017B  3452               	retlw	82	;'R'
   275     017C  344F               	retlw	79	;'O'
   276     017D  3452               	retlw	82	;'R'
   277     017E  3400               	retlw	0
   278     017F                     STR_5:
   279     017F  3441               	retlw	65	;'A'
   280     0180  3454               	retlw	84	;'T'
   281     0181  340D               	retlw	13
   282     0182  340A               	retlw	10
   283     0183  3400               	retlw	0
   284     0184                     STR_1:
   285     0184  344F               	retlw	79	;'O'
   286     0185  344B               	retlw	75	;'K'
   287     0186  3400               	retlw	0
   288     0179                     STR_4           equ	STR_3
   289     0184                     STR_2           equ	STR_1
   290     014E                     STR_10          equ	STR_6+15
   291                           
   292                           	psect	cinit
   293     000F                     start_initialization:	
   294                           ; #config settings
   295                           
   296     000F                     __initialization:
   297                           
   298                           ; Clear objects allocated to BANK0
   299     000F  1383               	bcf	3,7	;select IRP bank0
   300     0010  3020               	movlw	low __pbssBANK0
   301     0011  0084               	movwf	4
   302     0012  3034               	movlw	low (__pbssBANK0+20)
   303     0013  2264               	fcall	clear_ram0
   304     0014                     end_of_initialization:	
   305                           ;End of C runtime variable initialization code
   306                           
   307     0014                     __end_of__initialization:
   308     0014  0183               	clrf	3
   309     0015  2816               	ljmp	_main	;jump to C main() function
   310                           
   311                           	psect	bssBANK0
   312     0020                     __pbssBANK0:
   313     0020                     _cadena:
   314     0020                     	ds	20
   315                           
   316                           	psect	clrtext
   317     0264                     clear_ram0:	
   318                           ;	Called with FSR containing the base address, and
   319                           ;	W with the last address+1
   320                           
   321     0264  0064               	clrwdt	;clear the watchdog before getting into this loop
   322     0265                     clrloop0:
   323     0265  0180               	clrf	0	;clear RAM location pointed to by FSR
   324     0266  0A84               	incf	4,f	;increment pointer
   325     0267  0604               	xorwf	4,w	;XOR with final address
   326     0268  1903               	btfsc	3,2	;have we reached the end yet?
   327     0269  3400               	retlw	0	;all done for this memory range, return
   328     026A  0604               	xorwf	4,w	;XOR again to restore value
   329     026B  2A65               	goto	clrloop0	;do the next byte
   330                           
   331                           	psect	cstackCOMMON
   332     0070                     __pcstackCOMMON:
   333     0070                     ?_Uart_Read_String:
   334     0070                     ?_Uart_Send_Char:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ?_RX_DATO:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ?_main:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ?_Uart_Read:	
   344                           ; 1 bytes @ 0x0
   345                           
   346     0070                     ?_strcmp:	
   347                           ; 1 bytes @ 0x0
   348                           
   349     0070                     Uart_Read_String@Buf:	
   350                           ; 2 bytes @ 0x0
   351                           
   352     0070                     strcmp@l:	
   353                           ; 1 bytes @ 0x0
   354                           
   355     0070                     ??_Uart_Read:	
   356                           ; 1 bytes @ 0x0
   357                           
   358                           
   359                           ; 1 bytes @ 0x0
   360     0070                     	ds	1
   361     0071                     strcmp@r:
   362     0071                     Uart_Read_String@s_buf:	
   363                           ; 1 bytes @ 0x1
   364                           
   365                           
   366                           ; 2 bytes @ 0x1
   367     0071                     	ds	1
   368     0072                     ??_strcmp:
   369                           
   370                           ; 1 bytes @ 0x2
   371     0072                     	ds	1
   372     0073                     ??_Uart_Read_String:
   373                           
   374                           ; 1 bytes @ 0x3
   375     0073                     	ds	1
   376     0074                     Uart_Read_String@c:
   377                           
   378                           ; 1 bytes @ 0x4
   379     0074                     	ds	1
   380     0075                     Uart_Read_String@cont_buf:
   381                           
   382                           ; 2 bytes @ 0x5
   383     0075                     	ds	2
   384     0077                     ??_RX_DATO:
   385                           
   386                           ; 1 bytes @ 0x7
   387     0077                     	ds	4
   388                           
   389                           	psect	cstackBANK0
   390     0034                     __pcstackBANK0:
   391     0034                     ?_Uart_Init:
   392     0034                     Uart_Send_Char@INFO:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0034                     Uart_Init@baudios:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0034                     ??_Uart_Send_Char:	
   399                           ; 2 bytes @ 0x0
   400                           
   401                           
   402                           ; 1 bytes @ 0x0
   403     0034                     	ds	1
   404     0035                     ?_Uart_Send_String:
   405     0035                     Uart_Send_String@INFO:	
   406                           ; 1 bytes @ 0x1
   407                           
   408                           
   409                           ; 1 bytes @ 0x1
   410     0035                     	ds	1
   411     0036                     Uart_Send_String@W:
   412     0036                     ??_Uart_Init:	
   413                           ; 1 bytes @ 0x2
   414                           
   415     0036                     ??_Uart_Send_String:	
   416                           ; 1 bytes @ 0x2
   417                           
   418                           
   419                           ; 1 bytes @ 0x2
   420     0036                     	ds	1
   421     0037                     ??_main:
   422                           
   423                           ; 1 bytes @ 0x3
   424     0037                     	ds	3
   425     003A                     main@a:
   426                           
   427                           ; 1 bytes @ 0x6
   428     003A                     	ds	1
   429                           
   430                           	psect	maintext
   431     0016                     __pmaintext:	
   432 ;;
   433 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   434 ;;
   435 ;; *************** function _main *****************
   436 ;; Defined at:
   437 ;;		line 40 in file "main.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;  a               1    6[BANK0 ] unsigned char 
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : B00/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   451 ;;      Params:         0       0       0       0
   452 ;;      Locals:         0       1       0       0
   453 ;;      Temps:          0       3       0       0
   454 ;;      Totals:         0       4       0       0
   455 ;;Total ram usage:        4 bytes
   456 ;; Hardware stack levels required when called: 5
   457 ;; This function calls:
   458 ;;		_Uart_Init
   459 ;;		_Uart_Send_Char
   460 ;;		_Uart_Send_String
   461 ;; This function is called by:
   462 ;;		Startup code after reset
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466     0016                     _main:	
   467                           ;psect for function _main
   468                           
   469     0016                     l849:	
   470                           ;incstack = 0
   471                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   472                           
   473                           
   474                           ;main.c: 42:     TRISA = 0;
   475     0016  1683               	bsf	3,5	;RP0=1, select bank1
   476     0017  1303               	bcf	3,6	;RP1=0, select bank1
   477     0018  0185               	clrf	5	;volatile
   478     0019                     l851:
   479                           
   480                           ;main.c: 43:     TRISB = 0x12;
   481     0019  3012               	movlw	18
   482     001A  0086               	movwf	6	;volatile
   483                           
   484                           ;main.c: 44:     PORTA = 0, PORTB = 0;
   485     001B  1283               	bcf	3,5	;RP0=0, select bank0
   486     001C  1303               	bcf	3,6	;RP1=0, select bank0
   487     001D  0185               	clrf	5	;volatile
   488     001E  0186               	clrf	6	;volatile
   489     001F                     l853:
   490                           
   491                           ;main.c: 45:     CMCON = 0x07;
   492     001F  3007               	movlw	7
   493     0020  009F               	movwf	31	;volatile
   494     0021                     l855:
   495                           
   496                           ;main.c: 46:     OPTION_REGbits.PSA = 0, OPTION_REGbits.PS0 = 0,OPTION_REGbits.PS1 = 0,O
      +                          PTION_REGbits.PS2 = 0;
   497     0021  1683               	bsf	3,5	;RP0=1, select bank1
   498     0022  1303               	bcf	3,6	;RP1=0, select bank1
   499     0023  1181               	bcf	1,3	;volatile
   500     0024                     l857:
   501     0024  1001               	bcf	1,0	;volatile
   502     0025                     l859:
   503     0025  1081               	bcf	1,1	;volatile
   504     0026                     l861:
   505     0026  1101               	bcf	1,2	;volatile
   506     0027                     l863:
   507                           
   508                           ;main.c: 47:     Uart_Init(9600);
   509     0027  3080               	movlw	128
   510     0028  1283               	bcf	3,5	;RP0=0, select bank0
   511     0029  1303               	bcf	3,6	;RP1=0, select bank0
   512     002A  00B4               	movwf	Uart_Init@baudios
   513     002B  3025               	movlw	37
   514     002C  00B5               	movwf	Uart_Init@baudios+1
   515     002D  2213               	fcall	_Uart_Init
   516     002E                     l865:
   517                           
   518                           ;main.c: 53:     unsigned char a;;main.c: 54:     for (a=0;a<5;a++)
   519     002E  1283               	bcf	3,5	;RP0=0, select bank0
   520     002F  1303               	bcf	3,6	;RP1=0, select bank0
   521     0030  01BA               	clrf	main@a
   522     0031                     l43:
   523                           
   524                           ;main.c: 55:     {;main.c: 56:         PORTBbits.RB0 = 1;
   525     0031  1406               	bsf	6,0	;volatile
   526     0032                     l871:
   527                           
   528                           ;main.c: 57:         _delay((unsigned long)((500)*(4000000/4000.0)));
   529     0032  3003               	movlw	3
   530     0033  1283               	bcf	3,5	;RP0=0, select bank0
   531     0034  1303               	bcf	3,6	;RP1=0, select bank0
   532     0035  00B9               	movwf	??_main+2
   533     0036  308A               	movlw	138
   534     0037  00B8               	movwf	??_main+1
   535     0038  3055               	movlw	85
   536     0039  00B7               	movwf	??_main
   537     003A                     u257:
   538     003A  0BB7               	decfsz	??_main,f
   539     003B  283A               	goto	u257
   540     003C  0BB8               	decfsz	??_main+1,f
   541     003D  283A               	goto	u257
   542     003E  0BB9               	decfsz	??_main+2,f
   543     003F  283A               	goto	u257
   544     0040  0000               	nop
   545     0041                     l873:
   546                           
   547                           ;main.c: 58:         PORTBbits.RB0 = 0;
   548     0041  1283               	bcf	3,5	;RP0=0, select bank0
   549     0042  1303               	bcf	3,6	;RP1=0, select bank0
   550     0043  1006               	bcf	6,0	;volatile
   551                           
   552                           ;main.c: 59:         _delay((unsigned long)((500)*(4000000/4000.0)));
   553     0044  3003               	movlw	3
   554     0045  1283               	bcf	3,5	;RP0=0, select bank0
   555     0046  1303               	bcf	3,6	;RP1=0, select bank0
   556     0047  00B9               	movwf	??_main+2
   557     0048  308A               	movlw	138
   558     0049  00B8               	movwf	??_main+1
   559     004A  3055               	movlw	85
   560     004B  00B7               	movwf	??_main
   561     004C                     u267:
   562     004C  0BB7               	decfsz	??_main,f
   563     004D  284C               	goto	u267
   564     004E  0BB8               	decfsz	??_main+1,f
   565     004F  284C               	goto	u267
   566     0050  0BB9               	decfsz	??_main+2,f
   567     0051  284C               	goto	u267
   568     0052  0000               	nop
   569     0053                     l875:
   570                           
   571                           ;main.c: 60:         PORTBbits.RB5 = 1;
   572     0053  1283               	bcf	3,5	;RP0=0, select bank0
   573     0054  1303               	bcf	3,6	;RP1=0, select bank0
   574     0055  1686               	bsf	6,5	;volatile
   575                           
   576                           ;main.c: 61:         _delay((unsigned long)((500)*(4000000/4000.0)));
   577     0056  3003               	movlw	3
   578     0057  1283               	bcf	3,5	;RP0=0, select bank0
   579     0058  1303               	bcf	3,6	;RP1=0, select bank0
   580     0059  00B9               	movwf	??_main+2
   581     005A  308A               	movlw	138
   582     005B  00B8               	movwf	??_main+1
   583     005C  3055               	movlw	85
   584     005D  00B7               	movwf	??_main
   585     005E                     u277:
   586     005E  0BB7               	decfsz	??_main,f
   587     005F  285E               	goto	u277
   588     0060  0BB8               	decfsz	??_main+1,f
   589     0061  285E               	goto	u277
   590     0062  0BB9               	decfsz	??_main+2,f
   591     0063  285E               	goto	u277
   592     0064  0000               	nop
   593     0065                     l877:
   594                           
   595                           ;main.c: 62:         PORTBbits.RB5 = 0;
   596     0065  1283               	bcf	3,5	;RP0=0, select bank0
   597     0066  1303               	bcf	3,6	;RP1=0, select bank0
   598     0067  1286               	bcf	6,5	;volatile
   599                           
   600                           ;main.c: 63:         _delay((unsigned long)((500)*(4000000/4000.0)));
   601     0068  3003               	movlw	3
   602     0069  1283               	bcf	3,5	;RP0=0, select bank0
   603     006A  1303               	bcf	3,6	;RP1=0, select bank0
   604     006B  00B9               	movwf	??_main+2
   605     006C  308A               	movlw	138
   606     006D  00B8               	movwf	??_main+1
   607     006E  3055               	movlw	85
   608     006F  00B7               	movwf	??_main
   609     0070                     u287:
   610     0070  0BB7               	decfsz	??_main,f
   611     0071  2870               	goto	u287
   612     0072  0BB8               	decfsz	??_main+1,f
   613     0073  2870               	goto	u287
   614     0074  0BB9               	decfsz	??_main+2,f
   615     0075  2870               	goto	u287
   616     0076  0000               	nop
   617     0077                     l879:
   618                           
   619                           ;main.c: 64:     }
   620     0077  3001               	movlw	1
   621     0078  1283               	bcf	3,5	;RP0=0, select bank0
   622     0079  1303               	bcf	3,6	;RP1=0, select bank0
   623     007A  07BA               	addwf	main@a,f
   624     007B                     l881:
   625     007B  3005               	movlw	5
   626     007C  023A               	subwf	main@a,w
   627     007D  1C03               	skipc
   628     007E  2880               	goto	u241
   629     007F  2881               	goto	u240
   630     0080                     u241:
   631     0080  2831               	goto	l43
   632     0081                     u240:
   633     0081                     l883:
   634                           
   635                           ;main.c: 65:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   636     0081  300B               	movlw	11
   637     0082  1283               	bcf	3,5	;RP0=0, select bank0
   638     0083  1303               	bcf	3,6	;RP1=0, select bank0
   639     0084  00B9               	movwf	??_main+2
   640     0085  3026               	movlw	38
   641     0086  00B8               	movwf	??_main+1
   642     0087  305D               	movlw	93
   643     0088  00B7               	movwf	??_main
   644     0089                     u297:
   645     0089  0BB7               	decfsz	??_main,f
   646     008A  2889               	goto	u297
   647     008B  0BB8               	decfsz	??_main+1,f
   648     008C  2889               	goto	u297
   649     008D  0BB9               	decfsz	??_main+2,f
   650     008E  2889               	goto	u297
   651     008F  0000               	nop
   652     0090                     l885:
   653                           
   654                           ;main.c: 67:     Uart_Send_String("AT\r\n");
   655     0090  3041               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   656     0091  1283               	bcf	3,5	;RP0=0, select bank0
   657     0092  1303               	bcf	3,6	;RP1=0, select bank0
   658     0093  00B5               	movwf	Uart_Send_String@INFO
   659     0094  2230               	fcall	_Uart_Send_String
   660     0095                     l887:
   661                           
   662                           ;main.c: 68:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   663     0095  300B               	movlw	11
   664     0096  1283               	bcf	3,5	;RP0=0, select bank0
   665     0097  1303               	bcf	3,6	;RP1=0, select bank0
   666     0098  00B9               	movwf	??_main+2
   667     0099  3026               	movlw	38
   668     009A  00B8               	movwf	??_main+1
   669     009B  305D               	movlw	93
   670     009C  00B7               	movwf	??_main
   671     009D                     u307:
   672     009D  0BB7               	decfsz	??_main,f
   673     009E  289D               	goto	u307
   674     009F  0BB8               	decfsz	??_main+1,f
   675     00A0  289D               	goto	u307
   676     00A1  0BB9               	decfsz	??_main+2,f
   677     00A2  289D               	goto	u307
   678     00A3  0000               	nop
   679     00A4                     l889:
   680                           
   681                           ;main.c: 69:     PORTBbits.RB0 = 0;
   682     00A4  1283               	bcf	3,5	;RP0=0, select bank0
   683     00A5  1303               	bcf	3,6	;RP1=0, select bank0
   684     00A6  1006               	bcf	6,0	;volatile
   685     00A7                     l891:
   686                           
   687                           ;main.c: 70:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   688     00A7  300B               	movlw	11
   689     00A8  1283               	bcf	3,5	;RP0=0, select bank0
   690     00A9  1303               	bcf	3,6	;RP1=0, select bank0
   691     00AA  00B9               	movwf	??_main+2
   692     00AB  3026               	movlw	38
   693     00AC  00B8               	movwf	??_main+1
   694     00AD  305D               	movlw	93
   695     00AE  00B7               	movwf	??_main
   696     00AF                     u317:
   697     00AF  0BB7               	decfsz	??_main,f
   698     00B0  28AF               	goto	u317
   699     00B1  0BB8               	decfsz	??_main+1,f
   700     00B2  28AF               	goto	u317
   701     00B3  0BB9               	decfsz	??_main+2,f
   702     00B4  28AF               	goto	u317
   703     00B5  0000               	nop
   704     00B6                     l893:
   705                           
   706                           ;main.c: 72:     Uart_Send_String("AT+CWMODE_DEF=1\r\n");
   707     00B6  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   708     00B7  1283               	bcf	3,5	;RP0=0, select bank0
   709     00B8  1303               	bcf	3,6	;RP1=0, select bank0
   710     00B9  00B5               	movwf	Uart_Send_String@INFO
   711     00BA  2230               	fcall	_Uart_Send_String
   712                           
   713                           ;main.c: 73:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   714     00BB  300B               	movlw	11
   715     00BC  1283               	bcf	3,5	;RP0=0, select bank0
   716     00BD  1303               	bcf	3,6	;RP1=0, select bank0
   717     00BE  00B9               	movwf	??_main+2
   718     00BF  3026               	movlw	38
   719     00C0  00B8               	movwf	??_main+1
   720     00C1  305D               	movlw	93
   721     00C2  00B7               	movwf	??_main
   722     00C3                     u327:
   723     00C3  0BB7               	decfsz	??_main,f
   724     00C4  28C3               	goto	u327
   725     00C5  0BB8               	decfsz	??_main+1,f
   726     00C6  28C3               	goto	u327
   727     00C7  0BB9               	decfsz	??_main+2,f
   728     00C8  28C3               	goto	u327
   729     00C9  0000               	nop
   730     00CA                     l895:
   731                           
   732                           ;main.c: 74:     PORTBbits.RB0 = 0;
   733     00CA  1283               	bcf	3,5	;RP0=0, select bank0
   734     00CB  1303               	bcf	3,6	;RP1=0, select bank0
   735     00CC  1006               	bcf	6,0	;volatile
   736                           
   737                           ;main.c: 75:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   738     00CD  300B               	movlw	11
   739     00CE  1283               	bcf	3,5	;RP0=0, select bank0
   740     00CF  1303               	bcf	3,6	;RP1=0, select bank0
   741     00D0  00B9               	movwf	??_main+2
   742     00D1  3026               	movlw	38
   743     00D2  00B8               	movwf	??_main+1
   744     00D3  305D               	movlw	93
   745     00D4  00B7               	movwf	??_main
   746     00D5                     u337:
   747     00D5  0BB7               	decfsz	??_main,f
   748     00D6  28D5               	goto	u337
   749     00D7  0BB8               	decfsz	??_main+1,f
   750     00D8  28D5               	goto	u337
   751     00D9  0BB9               	decfsz	??_main+2,f
   752     00DA  28D5               	goto	u337
   753     00DB  0000               	nop
   754     00DC                     l897:
   755                           
   756                           ;main.c: 77:     Uart_Send_String("AT+CWJAP_DEF=");
   757     00DC  3022               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   758     00DD  1283               	bcf	3,5	;RP0=0, select bank0
   759     00DE  1303               	bcf	3,6	;RP1=0, select bank0
   760     00DF  00B5               	movwf	Uart_Send_String@INFO
   761     00E0  2230               	fcall	_Uart_Send_String
   762     00E1                     l899:
   763                           
   764                           ;main.c: 78:     Uart_Send_Char('"');
   765     00E1  3022               	movlw	34
   766     00E2  2256               	fcall	_Uart_Send_Char
   767     00E3                     l901:
   768                           
   769                           ;main.c: 79:     Uart_Send_String("DIGIFIBRA-6PRN");
   770     00E3  3013               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   771     00E4  1283               	bcf	3,5	;RP0=0, select bank0
   772     00E5  1303               	bcf	3,6	;RP1=0, select bank0
   773     00E6  00B5               	movwf	Uart_Send_String@INFO
   774     00E7  2230               	fcall	_Uart_Send_String
   775     00E8                     l903:
   776                           
   777                           ;main.c: 80:     Uart_Send_Char('"');
   778     00E8  3022               	movlw	34
   779     00E9  2256               	fcall	_Uart_Send_Char
   780     00EA                     l905:
   781                           
   782                           ;main.c: 81:     Uart_Send_Char(',');
   783     00EA  302C               	movlw	44
   784     00EB  2256               	fcall	_Uart_Send_Char
   785     00EC                     l907:
   786                           
   787                           ;main.c: 82:     Uart_Send_Char('"');
   788     00EC  3022               	movlw	34
   789     00ED  2256               	fcall	_Uart_Send_Char
   790     00EE                     l909:
   791                           
   792                           ;main.c: 83:     Uart_Send_String("ksH74442ey");
   793     00EE  3030               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   794     00EF  1283               	bcf	3,5	;RP0=0, select bank0
   795     00F0  1303               	bcf	3,6	;RP1=0, select bank0
   796     00F1  00B5               	movwf	Uart_Send_String@INFO
   797     00F2  2230               	fcall	_Uart_Send_String
   798     00F3                     l911:
   799                           
   800                           ;main.c: 84:     Uart_Send_Char('"');
   801     00F3  3022               	movlw	34
   802     00F4  2256               	fcall	_Uart_Send_Char
   803     00F5                     l913:
   804                           
   805                           ;main.c: 85:     Uart_Send_String("\r\n");
   806     00F5  3010               	movlw	(low (((STR_6+15)-__stringbase)| (0+32768)))& (0+255)
   807     00F6  1283               	bcf	3,5	;RP0=0, select bank0
   808     00F7  1303               	bcf	3,6	;RP1=0, select bank0
   809     00F8  00B5               	movwf	Uart_Send_String@INFO
   810     00F9  2230               	fcall	_Uart_Send_String
   811     00FA                     l915:
   812                           
   813                           ;main.c: 86:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   814     00FA  300B               	movlw	11
   815     00FB  1283               	bcf	3,5	;RP0=0, select bank0
   816     00FC  1303               	bcf	3,6	;RP1=0, select bank0
   817     00FD  00B9               	movwf	??_main+2
   818     00FE  3026               	movlw	38
   819     00FF  00B8               	movwf	??_main+1
   820     0100  305D               	movlw	93
   821     0101  00B7               	movwf	??_main
   822     0102                     u347:
   823     0102  0BB7               	decfsz	??_main,f
   824     0103  2902               	goto	u347
   825     0104  0BB8               	decfsz	??_main+1,f
   826     0105  2902               	goto	u347
   827     0106  0BB9               	decfsz	??_main+2,f
   828     0107  2902               	goto	u347
   829     0108  0000               	nop
   830     0109                     l917:
   831                           
   832                           ;main.c: 87:     PORTBbits.RB0 = 0;
   833     0109  1283               	bcf	3,5	;RP0=0, select bank0
   834     010A  1303               	bcf	3,6	;RP1=0, select bank0
   835     010B  1006               	bcf	6,0	;volatile
   836     010C                     l919:
   837                           
   838                           ;main.c: 88:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   839     010C  300B               	movlw	11
   840     010D  1283               	bcf	3,5	;RP0=0, select bank0
   841     010E  1303               	bcf	3,6	;RP1=0, select bank0
   842     010F  00B9               	movwf	??_main+2
   843     0110  3026               	movlw	38
   844     0111  00B8               	movwf	??_main+1
   845     0112  305D               	movlw	93
   846     0113  00B7               	movwf	??_main
   847     0114                     u357:
   848     0114  0BB7               	decfsz	??_main,f
   849     0115  2914               	goto	u357
   850     0116  0BB8               	decfsz	??_main+1,f
   851     0117  2914               	goto	u357
   852     0118  0BB9               	decfsz	??_main+2,f
   853     0119  2914               	goto	u357
   854     011A  0000               	nop
   855     011B                     l921:
   856                           
   857                           ;main.c: 91:     {;main.c: 92:         PORTBbits.RB0 = 1;
   858     011B  1283               	bcf	3,5	;RP0=0, select bank0
   859     011C  1303               	bcf	3,6	;RP1=0, select bank0
   860     011D  1406               	bsf	6,0	;volatile
   861     011E                     l923:
   862                           
   863                           ;main.c: 93:         _delay((unsigned long)((100)*(4000000/4000.0)));
   864     011E  3082               	movlw	130
   865     011F  1283               	bcf	3,5	;RP0=0, select bank0
   866     0120  1303               	bcf	3,6	;RP1=0, select bank0
   867     0121  00B8               	movwf	??_main+1
   868     0122  30DD               	movlw	221
   869     0123  00B7               	movwf	??_main
   870     0124                     u367:
   871     0124  0BB7               	decfsz	??_main,f
   872     0125  2924               	goto	u367
   873     0126  0BB8               	decfsz	??_main+1,f
   874     0127  2924               	goto	u367
   875     0128  0000               	nop
   876     0129                     l925:
   877                           
   878                           ;main.c: 94:         PORTBbits.RB0 = 0;
   879     0129  1283               	bcf	3,5	;RP0=0, select bank0
   880     012A  1303               	bcf	3,6	;RP1=0, select bank0
   881     012B  1006               	bcf	6,0	;volatile
   882     012C                     l927:
   883                           
   884                           ;main.c: 95:         _delay((unsigned long)((100)*(4000000/4000.0)));
   885     012C  3082               	movlw	130
   886     012D  1283               	bcf	3,5	;RP0=0, select bank0
   887     012E  1303               	bcf	3,6	;RP1=0, select bank0
   888     012F  00B8               	movwf	??_main+1
   889     0130  30DD               	movlw	221
   890     0131  00B7               	movwf	??_main
   891     0132                     u377:
   892     0132  0BB7               	decfsz	??_main,f
   893     0133  2932               	goto	u377
   894     0134  0BB8               	decfsz	??_main+1,f
   895     0135  2932               	goto	u377
   896     0136  0000               	nop
   897     0137  291B               	goto	l921
   898     0138  280E               	ljmp	start
   899     0139                     __end_of_main:
   900                           
   901                           	psect	text1
   902     0230                     __ptext1:	
   903 ;; *************** function _Uart_Send_String *****************
   904 ;; Defined at:
   905 ;;		line 36 in file "RS-232.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  INFO            1    1[BANK0 ] PTR unsigned char 
   908 ;;		 -> STR_10(3), STR_9(11), STR_8(15), STR_7(14), 
   909 ;;		 -> STR_6(18), STR_5(5), 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  W               1    2[BANK0 ] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   921 ;;      Params:         0       1       0       0
   922 ;;      Locals:         0       1       0       0
   923 ;;      Temps:          0       0       0       0
   924 ;;      Totals:         0       2       0       0
   925 ;;Total ram usage:        2 bytes
   926 ;; Hardware stack levels used: 1
   927 ;; Hardware stack levels required when called: 4
   928 ;; This function calls:
   929 ;;		_Uart_Send_Char
   930 ;; This function is called by:
   931 ;;		_main
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935     0230                     _Uart_Send_String:	
   936                           ;psect for function _Uart_Send_String
   937                           
   938     0230                     l831:	
   939                           ;incstack = 0
   940                           ; Regs used in _Uart_Send_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   941                           
   942                           
   943                           ;RS-232.c: 36: void Uart_Send_String(char *INFO);RS-232.c: 37: {;RS-232.c: 38:     char 
      +                          W;;RS-232.c: 39:     for (W = 0; INFO[W]!='\0'; W++)
   944     0230  1283               	bcf	3,5	;RP0=0, select bank0
   945     0231  1303               	bcf	3,6	;RP1=0, select bank0
   946     0232  01B6               	clrf	Uart_Send_String@W
   947     0233  2A3D               	goto	l837
   948     0234                     l833:
   949                           
   950                           ;RS-232.c: 40:     {;RS-232.c: 41:         Uart_Send_Char(INFO[W]);
   951     0234  0836               	movf	Uart_Send_String@W,w
   952     0235  0735               	addwf	Uart_Send_String@INFO,w
   953     0236  0084               	movwf	4
   954     0237  2139               	fcall	stringdir
   955     0238  2256               	fcall	_Uart_Send_Char
   956     0239                     l835:
   957                           
   958                           ;RS-232.c: 42:     }
   959     0239  3001               	movlw	1
   960     023A  1283               	bcf	3,5	;RP0=0, select bank0
   961     023B  1303               	bcf	3,6	;RP1=0, select bank0
   962     023C  07B6               	addwf	Uart_Send_String@W,f
   963     023D                     l837:
   964     023D  0836               	movf	Uart_Send_String@W,w
   965     023E  0735               	addwf	Uart_Send_String@INFO,w
   966     023F  0084               	movwf	4
   967     0240  2139               	fcall	stringdir
   968     0241  3A00               	xorlw	0
   969     0242  1D03               	skipz
   970     0243  2A45               	goto	u201
   971     0244  2A46               	goto	u200
   972     0245                     u201:
   973     0245  2A34               	goto	l833
   974     0246                     u200:
   975     0246                     l84:
   976     0246  0008               	return
   977     0247                     __end_of_Uart_Send_String:
   978                           
   979                           	psect	text2
   980     0256                     __ptext2:	
   981 ;; *************** function _Uart_Send_Char *****************
   982 ;; Defined at:
   983 ;;		line 30 in file "RS-232.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  INFO            1    wreg     unsigned char 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  INFO            1    0[BANK0 ] unsigned char 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   997 ;;      Params:         0       0       0       0
   998 ;;      Locals:         0       1       0       0
   999 ;;      Temps:          0       0       0       0
  1000 ;;      Totals:         0       1       0       0
  1001 ;;Total ram usage:        1 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 3
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;;		_Uart_Send_String
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012     0256                     _Uart_Send_Char:	
  1013                           ;psect for function _Uart_Send_Char
  1014                           
  1015                           
  1016                           ;incstack = 0
  1017                           ; Regs used in _Uart_Send_Char: [wreg]
  1018                           ;Uart_Send_Char@INFO stored from wreg
  1019     0256  1283               	bcf	3,5	;RP0=0, select bank0
  1020     0257  1303               	bcf	3,6	;RP1=0, select bank0
  1021     0258  00B4               	movwf	Uart_Send_Char@INFO
  1022     0259                     l793:
  1023     0259                     l75:	
  1024                           ;RS-232.c: 30: void Uart_Send_Char(char INFO);RS-232.c: 31: {;RS-232.c: 32:     while(TX
      +                          STAbits.TRMT == 0);
  1025                           
  1026     0259  1683               	bsf	3,5	;RP0=1, select bank1
  1027     025A  1303               	bcf	3,6	;RP1=0, select bank1
  1028     025B  1C98               	btfss	24,1	;volatile
  1029     025C  2A5E               	goto	u141
  1030     025D  2A5F               	goto	u140
  1031     025E                     u141:
  1032     025E  2A59               	goto	l75
  1033     025F                     u140:
  1034     025F                     l795:
  1035                           
  1036                           ;RS-232.c: 33:     TXREG = INFO;
  1037     025F  1283               	bcf	3,5	;RP0=0, select bank0
  1038     0260  1303               	bcf	3,6	;RP1=0, select bank0
  1039     0261  0834               	movf	Uart_Send_Char@INFO,w
  1040     0262  0099               	movwf	25	;volatile
  1041     0263                     l78:
  1042     0263  0008               	return
  1043     0264                     __end_of_Uart_Send_Char:
  1044                           
  1045                           	psect	text3
  1046     0213                     __ptext3:	
  1047 ;; *************** function _Uart_Init *****************
  1048 ;; Defined at:
  1049 ;;		line 13 in file "RS-232.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  baudios         2    0[BANK0 ] int 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1063 ;;      Params:         0       2       0       0
  1064 ;;      Locals:         0       0       0       0
  1065 ;;      Temps:          0       0       0       0
  1066 ;;      Totals:         0       2       0       0
  1067 ;;Total ram usage:        2 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 3
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077     0213                     _Uart_Init:	
  1078                           ;psect for function _Uart_Init
  1079                           
  1080     0213                     l827:	
  1081                           ;incstack = 0
  1082                           ; Regs used in _Uart_Init: [wreg+status,2+status,0]
  1083                           
  1084                           
  1085                           ;RS-232.c: 13: void Uart_Init(int baudios);RS-232.c: 14: {;RS-232.c: 15:     if(baudios 
      +                          == 9600)
  1086     0213  3080               	movlw	128
  1087     0214  1283               	bcf	3,5	;RP0=0, select bank0
  1088     0215  1303               	bcf	3,6	;RP1=0, select bank0
  1089     0216  0634               	xorwf	Uart_Init@baudios,w
  1090     0217  3025               	movlw	37
  1091     0218  1903               	skipnz
  1092     0219  0635               	xorwf	Uart_Init@baudios+1,w
  1093     021A  1D03               	btfss	3,2
  1094     021B  2A1D               	goto	u191
  1095     021C  2A1E               	goto	u190
  1096     021D                     u191:
  1097     021D  2A2F               	goto	l72
  1098     021E                     u190:
  1099     021E                     l829:
  1100                           
  1101                           ;RS-232.c: 16:         {;RS-232.c: 17:         INTCONbits.GIE = 1;
  1102     021E  178B               	bsf	11,7	;volatile
  1103                           
  1104                           ;RS-232.c: 18:         INTCONbits.PEIE = 1;
  1105     021F  170B               	bsf	11,6	;volatile
  1106                           
  1107                           ;RS-232.c: 19:         PIE1bits.RCIE = 1;
  1108     0220  1683               	bsf	3,5	;RP0=1, select bank1
  1109     0221  1303               	bcf	3,6	;RP1=0, select bank1
  1110     0222  168C               	bsf	12,5	;volatile
  1111                           
  1112                           ;RS-232.c: 20:         TRISBbits.TRISB1 = 1;
  1113     0223  1486               	bsf	6,1	;volatile
  1114                           
  1115                           ;RS-232.c: 21:         TRISBbits.TRISB2 = 0;
  1116     0224  1106               	bcf	6,2	;volatile
  1117                           
  1118                           ;RS-232.c: 22:         TXSTAbits.TXEN = 1;
  1119     0225  1698               	bsf	24,5	;volatile
  1120                           
  1121                           ;RS-232.c: 23:         TXSTAbits.BRGH = 1;
  1122     0226  1518               	bsf	24,2	;volatile
  1123                           
  1124                           ;RS-232.c: 24:         RCSTAbits.SPEN = 1;
  1125     0227  1283               	bcf	3,5	;RP0=0, select bank0
  1126     0228  1303               	bcf	3,6	;RP1=0, select bank0
  1127     0229  1798               	bsf	24,7	;volatile
  1128                           
  1129                           ;RS-232.c: 25:         RCSTAbits.CREN = 1;
  1130     022A  1618               	bsf	24,4	;volatile
  1131                           
  1132                           ;RS-232.c: 26:         SPBRG = 25;
  1133     022B  3019               	movlw	25
  1134     022C  1683               	bsf	3,5	;RP0=1, select bank1
  1135     022D  1303               	bcf	3,6	;RP1=0, select bank1
  1136     022E  0099               	movwf	25	;volatile
  1137     022F                     l72:
  1138     022F  0008               	return
  1139     0230                     __end_of_Uart_Init:
  1140                           
  1141                           	psect	text4
  1142     0187                     __ptext4:	
  1143 ;; *************** function _RX_DATO *****************
  1144 ;; Defined at:
  1145 ;;		line 17 in file "main.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1159 ;;      Params:         0       0       0       0
  1160 ;;      Locals:         0       0       0       0
  1161 ;;      Temps:          4       0       0       0
  1162 ;;      Totals:         4       0       0       0
  1163 ;;Total ram usage:        4 bytes
  1164 ;; Hardware stack levels used: 1
  1165 ;; Hardware stack levels required when called: 2
  1166 ;; This function calls:
  1167 ;;		_Uart_Read_String
  1168 ;;		_strcmp
  1169 ;; This function is called by:
  1170 ;;		Interrupt level 1
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174     0187                     _RX_DATO:	
  1175                           ;psect for function _RX_DATO
  1176                           
  1177     0187                     i1l839:
  1178                           
  1179                           ;main.c: 19:     if (PIR1bits.RCIF == 1)
  1180     0187  1283               	bcf	3,5	;RP0=0, select bank0
  1181     0188  1303               	bcf	3,6	;RP1=0, select bank0
  1182     0189  1E8C               	btfss	12,5	;volatile
  1183     018A  298C               	goto	u21_21
  1184     018B  298D               	goto	u21_20
  1185     018C                     u21_21:
  1186     018C  29B5               	goto	i1l38
  1187     018D                     u21_20:
  1188     018D                     i1l841:
  1189                           
  1190                           ;main.c: 20:     {;main.c: 21:         Uart_Read_String(cadena, 20);
  1191     018D  3020               	movlw	(low (_cadena| 0))& (0+255)
  1192     018E  00F0               	movwf	Uart_Read_String@Buf
  1193     018F  3014               	movlw	20
  1194     0190  00F1               	movwf	Uart_Read_String@s_buf
  1195     0191  3000               	movlw	0
  1196     0192  00F2               	movwf	Uart_Read_String@s_buf+1
  1197     0193  21C0               	fcall	_Uart_Read_String
  1198                           
  1199                           ;main.c: 23:             if(!strcmp(cadena, "OK"))
  1200     0194  3020               	movlw	(low (_cadena| 0))& (0+255)
  1201     0195  00F0               	movwf	strcmp@l
  1202     0196  3046               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1203     0197  00F1               	movwf	strcmp@r
  1204     0198  21EB               	fcall	_strcmp
  1205     0199  0870               	movf	?_strcmp,w
  1206     019A  0471               	iorwf	?_strcmp+1,w
  1207     019B  1D03               	btfss	3,2
  1208     019C  299E               	goto	u22_21
  1209     019D  299F               	goto	u22_20
  1210     019E                     u22_21:
  1211     019E  29A3               	goto	i1l845
  1212     019F                     u22_20:
  1213     019F                     i1l843:
  1214                           
  1215                           ;main.c: 24:             {;main.c: 25:             PORTBbits.RB0 = 1;
  1216     019F  1283               	bcf	3,5	;RP0=0, select bank0
  1217     01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1218     01A1  1406               	bsf	6,0	;volatile
  1219                           
  1220                           ;main.c: 26:             PORTBbits.RB5 = 0;
  1221     01A2  1286               	bcf	6,5	;volatile
  1222     01A3                     i1l845:
  1223                           
  1224                           ;main.c: 29:             if(!strcmp(cadena, "ERROR"))
  1225     01A3  3020               	movlw	(low (_cadena| 0))& (0+255)
  1226     01A4  00F0               	movwf	strcmp@l
  1227     01A5  303B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1228     01A6  00F1               	movwf	strcmp@r
  1229     01A7  21EB               	fcall	_strcmp
  1230     01A8  0870               	movf	?_strcmp,w
  1231     01A9  0471               	iorwf	?_strcmp+1,w
  1232     01AA  1D03               	btfss	3,2
  1233     01AB  29AD               	goto	u23_21
  1234     01AC  29AE               	goto	u23_20
  1235     01AD                     u23_21:
  1236     01AD  29B2               	goto	i1l37
  1237     01AE                     u23_20:
  1238     01AE                     i1l847:
  1239                           
  1240                           ;main.c: 30:             {;main.c: 31:             PORTBbits.RB0 = 0;
  1241     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1242     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1243     01B0  1006               	bcf	6,0	;volatile
  1244                           
  1245                           ;main.c: 32:             PORTBbits.RB5 = 1;
  1246     01B1  1686               	bsf	6,5	;volatile
  1247     01B2                     i1l37:	
  1248                           ;main.c: 33:             }
  1249                           
  1250                           
  1251                           ;main.c: 35:         PIR1bits.RCIF = 0;
  1252     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1253     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1254     01B4  128C               	bcf	12,5	;volatile
  1255     01B5                     i1l38:
  1256     01B5  087A               	movf	??_RX_DATO+3,w
  1257     01B6  00FF               	movwf	btemp+1
  1258     01B7  0879               	movf	??_RX_DATO+2,w
  1259     01B8  008A               	movwf	10
  1260     01B9  0878               	movf	??_RX_DATO+1,w
  1261     01BA  0084               	movwf	4
  1262     01BB  0E77               	swapf	??_RX_DATO,w
  1263     01BC  0083               	movwf	3
  1264     01BD  0EFE               	swapf	btemp,f
  1265     01BE  0E7E               	swapf	btemp,w
  1266     01BF  0009               	retfie
  1267     01C0                     __end_of_RX_DATO:
  1268                           
  1269                           	psect	intentry
  1270     0004                     __pintentry:	
  1271                           ;incstack = 0
  1272                           ; Regs used in _RX_DATO: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1273                           
  1274     0004                     interrupt_function:
  1275     007E                     saved_w         set	btemp
  1276     0004  00FE               	movwf	btemp
  1277     0005  0E03               	swapf	3,w
  1278     0006  00F7               	movwf	??_RX_DATO
  1279     0007  0804               	movf	4,w
  1280     0008  00F8               	movwf	??_RX_DATO+1
  1281     0009  080A               	movf	10,w
  1282     000A  00F9               	movwf	??_RX_DATO+2
  1283     000B  087F               	movf	btemp+1,w
  1284     000C  00FA               	movwf	??_RX_DATO+3
  1285     000D  2987               	ljmp	_RX_DATO
  1286                           
  1287                           	psect	text5
  1288     01EB                     __ptext5:	
  1289 ;; *************** function _strcmp *****************
  1290 ;; Defined at:
  1291 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcmp.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  l               1    0[COMMON] PTR const unsigned char 
  1294 ;;		 -> cadena(20), 
  1295 ;;  r               1    1[COMMON] PTR const unsigned char 
  1296 ;;		 -> STR_4(6), STR_2(3), 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  2    0[COMMON] int 
  1301 ;; Registers used:
  1302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1308 ;;      Params:         2       0       0       0
  1309 ;;      Locals:         0       0       0       0
  1310 ;;      Temps:          2       0       0       0
  1311 ;;      Totals:         4       0       0       0
  1312 ;;Total ram usage:        4 bytes
  1313 ;; Hardware stack levels used: 2
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_RX_DATO
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321     01EB                     _strcmp:	
  1322                           ;psect for function _strcmp
  1323                           
  1324     01EB                     i1l815:	
  1325                           ;incstack = 0
  1326                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
  1327                           
  1328     01EB  29F0               	goto	i1l819
  1329     01EC                     i1l817:
  1330     01EC  3001               	movlw	1
  1331     01ED  07F0               	addwf	strcmp@l,f
  1332     01EE  3001               	movlw	1
  1333     01EF  07F1               	addwf	strcmp@r,f
  1334     01F0                     i1l819:
  1335     01F0  0871               	movf	strcmp@r,w
  1336     01F1  0084               	movwf	4
  1337     01F2  2139               	fcall	stringdir
  1338     01F3  00F2               	movwf	??_strcmp
  1339     01F4  0870               	movf	strcmp@l,w
  1340     01F5  0084               	movwf	4
  1341     01F6  1383               	bcf	3,7	;select IRP bank0
  1342     01F7  0800               	movf	0,w
  1343     01F8  0672               	xorwf	??_strcmp,w
  1344     01F9  1D03               	skipz
  1345     01FA  29FC               	goto	u17_21
  1346     01FB  29FD               	goto	u17_20
  1347     01FC                     u17_21:
  1348     01FC  2A04               	goto	i1l823
  1349     01FD                     u17_20:
  1350     01FD                     i1l821:
  1351     01FD  0870               	movf	strcmp@l,w
  1352     01FE  0084               	movwf	4
  1353     01FF  0800               	movf	0,w
  1354     0200  1D03               	btfss	3,2
  1355     0201  2A03               	goto	u18_21
  1356     0202  2A04               	goto	u18_20
  1357     0203                     u18_21:
  1358     0203  29EC               	goto	i1l817
  1359     0204                     u18_20:
  1360     0204                     i1l823:
  1361     0204  0871               	movf	strcmp@r,w
  1362     0205  0084               	movwf	4
  1363     0206  2139               	fcall	stringdir
  1364     0207  00F2               	movwf	??_strcmp
  1365     0208  0870               	movf	strcmp@l,w
  1366     0209  0084               	movwf	4
  1367     020A  0800               	movf	0,w
  1368     020B  00F3               	movwf	??_strcmp+1
  1369     020C  0872               	movf	??_strcmp,w
  1370     020D  0273               	subwf	??_strcmp+1,w
  1371     020E  00F0               	movwf	?_strcmp
  1372     020F  01F1               	clrf	?_strcmp+1
  1373     0210  1C03               	skipc
  1374     0211  03F1               	decf	?_strcmp+1,f
  1375     0212                     i1l647:
  1376     0212  0008               	return
  1377     0213                     __end_of_strcmp:
  1378                           
  1379                           	psect	text6
  1380     01C0                     __ptext6:	
  1381 ;; *************** function _Uart_Read_String *****************
  1382 ;; Defined at:
  1383 ;;		line 57 in file "RS-232.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  Buf             1    0[COMMON] PTR unsigned char 
  1386 ;;		 -> cadena(20), 
  1387 ;;  s_buf           2    1[COMMON] unsigned int 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  cont_buf        2    5[COMMON] unsigned int 
  1390 ;;  c               1    4[COMMON] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1400 ;;      Params:         3       0       0       0
  1401 ;;      Locals:         3       0       0       0
  1402 ;;      Temps:          1       0       0       0
  1403 ;;      Totals:         7       0       0       0
  1404 ;;Total ram usage:        7 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 1
  1407 ;; This function calls:
  1408 ;;		_Uart_Read
  1409 ;; This function is called by:
  1410 ;;		_RX_DATO
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414     01C0                     _Uart_Read_String:	
  1415                           ;psect for function _Uart_Read_String
  1416                           
  1417     01C0                     i1l797:	
  1418                           ;incstack = 0
  1419                           ; Regs used in _Uart_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1420                           
  1421                           
  1422                           ;RS-232.c: 57: void Uart_Read_String(char* Buf, unsigned int s_buf);RS-232.c: 58: {;RS-2
      +                          32.c: 59:     unsigned int cont_buf = 0;
  1423     01C0  01F5               	clrf	Uart_Read_String@cont_buf
  1424     01C1  01F6               	clrf	Uart_Read_String@cont_buf+1
  1425     01C2                     i1l799:
  1426                           
  1427                           ;RS-232.c: 62:     {;RS-232.c: 63:         c = Uart_Read();
  1428     01C2  2247               	fcall	_Uart_Read
  1429     01C3  00F4               	movwf	Uart_Read_String@c
  1430     01C4                     i1l801:
  1431                           
  1432                           ;RS-232.c: 64:         Buf[cont_buf++] = c;
  1433     01C4  0875               	movf	Uart_Read_String@cont_buf,w
  1434     01C5  0770               	addwf	Uart_Read_String@Buf,w
  1435     01C6  00F3               	movwf	??_Uart_Read_String
  1436     01C7  0873               	movf	??_Uart_Read_String,w
  1437     01C8  0084               	movwf	4
  1438     01C9  0874               	movf	Uart_Read_String@c,w
  1439     01CA  1383               	bcf	3,7	;select IRP bank0
  1440     01CB  0080               	movwf	0
  1441     01CC                     i1l803:
  1442     01CC  3001               	movlw	1
  1443     01CD  07F5               	addwf	Uart_Read_String@cont_buf,f
  1444     01CE  1803               	skipnc
  1445     01CF  0AF6               	incf	Uart_Read_String@cont_buf+1,f
  1446     01D0  3000               	movlw	0
  1447     01D1  07F6               	addwf	Uart_Read_String@cont_buf+1,f
  1448     01D2                     i1l805:
  1449                           
  1450                           ;RS-232.c: 65:         if(cont_buf >= s_buf) break;
  1451     01D2  0872               	movf	Uart_Read_String@s_buf+1,w
  1452     01D3  0276               	subwf	Uart_Read_String@cont_buf+1,w
  1453     01D4  1D03               	skipz
  1454     01D5  29D8               	goto	u15_25
  1455     01D6  0871               	movf	Uart_Read_String@s_buf,w
  1456     01D7  0275               	subwf	Uart_Read_String@cont_buf,w
  1457     01D8                     u15_25:
  1458     01D8  1C03               	skipc
  1459     01D9  29DB               	goto	u15_21
  1460     01DA  29DC               	goto	u15_20
  1461     01DB                     u15_21:
  1462     01DB  29DD               	goto	i1l809
  1463     01DC                     u15_20:
  1464     01DC  29E3               	goto	i1l811
  1465     01DD                     i1l809:
  1466                           
  1467                           ;RS-232.c: 66:     }while(c != '\n');
  1468     01DD  300A               	movlw	10
  1469     01DE  0674               	xorwf	Uart_Read_String@c,w
  1470     01DF  1D03               	btfss	3,2
  1471     01E0  29E2               	goto	u16_21
  1472     01E1  29E3               	goto	u16_20
  1473     01E2                     u16_21:
  1474     01E2  29C2               	goto	i1l799
  1475     01E3                     u16_20:
  1476     01E3                     i1l811:
  1477                           
  1478                           ;RS-232.c: 67:     Buf[cont_buf-2] = '\0';
  1479     01E3  0875               	movf	Uart_Read_String@cont_buf,w
  1480     01E4  0770               	addwf	Uart_Read_String@Buf,w
  1481     01E5  00F3               	movwf	??_Uart_Read_String
  1482     01E6  0873               	movf	??_Uart_Read_String,w
  1483     01E7  3EFE               	addlw	254
  1484     01E8  0084               	movwf	4
  1485     01E9  0180               	clrf	0
  1486     01EA                     i1l813:
  1487     01EA                     i1l97:
  1488     01EA  0008               	return
  1489     01EB                     __end_of_Uart_Read_String:
  1490                           
  1491                           	psect	text7
  1492     0247                     __ptext7:	
  1493 ;; *************** function _Uart_Read *****************
  1494 ;; Defined at:
  1495 ;;		line 45 in file "RS-232.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      unsigned char 
  1502 ;; Registers used:
  1503 ;;		wreg
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1509 ;;      Params:         0       0       0       0
  1510 ;;      Locals:         0       0       0       0
  1511 ;;      Temps:          0       0       0       0
  1512 ;;      Totals:         0       0       0       0
  1513 ;;Total ram usage:        0 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_Uart_Read_String
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522     0247                     _Uart_Read:	
  1523                           ;psect for function _Uart_Read
  1524                           
  1525     0247                     i1l653:	
  1526                           ;incstack = 0
  1527                           ; Regs used in _Uart_Read: [wreg]
  1528                           
  1529     0247                     i1l87:	
  1530                           ;RS-232.c: 47:     while(PIR1bits.RCIF == 0);
  1531                           
  1532     0247  1283               	bcf	3,5	;RP0=0, select bank0
  1533     0248  1303               	bcf	3,6	;RP1=0, select bank0
  1534     0249  1E8C               	btfss	12,5	;volatile
  1535     024A  2A4C               	goto	u2_21
  1536     024B  2A4D               	goto	u2_20
  1537     024C                     u2_21:
  1538     024C  2A47               	goto	i1l87
  1539     024D                     u2_20:
  1540     024D                     i1l89:
  1541                           
  1542                           ;RS-232.c: 48:     if(RCSTAbits.OERR == 1)
  1543     024D  1C98               	btfss	24,1	;volatile
  1544     024E  2A50               	goto	u3_21
  1545     024F  2A51               	goto	u3_20
  1546     0250                     u3_21:
  1547     0250  2A53               	goto	i1l90
  1548     0251                     u3_20:
  1549     0251                     i1l655:
  1550                           
  1551                           ;RS-232.c: 49:     {;RS-232.c: 50:         RCSTAbits.CREN = 0;
  1552     0251  1218               	bcf	24,4	;volatile
  1553                           
  1554                           ;RS-232.c: 51:         RCSTAbits.CREN = 1;
  1555     0252  1618               	bsf	24,4	;volatile
  1556     0253                     i1l90:	
  1557                           ;RS-232.c: 52:     }
  1558                           
  1559                           
  1560                           ;RS-232.c: 53:     PIR1bits.RCIF = 0;
  1561     0253  128C               	bcf	12,5	;volatile
  1562     0254                     i1l657:
  1563                           
  1564                           ;RS-232.c: 54:     return RCREG;
  1565     0254  081A               	movf	26,w	;volatile
  1566     0255                     i1l91:
  1567     0255  0008               	return
  1568     0256                     __end_of_Uart_Read:
  1569     0000                     ___latbits      equ	0
  1570     007E                     btemp           set	126	;btemp
  1571     007E                     wtemp0          set	126
  1572                           
  1573                           	psect	idloc
  1574                           
  1575                           ;Config register IDLOC0 @ 0x2000
  1576                           ;	unspecified, using default values
  1577     2000                     	org	8192
  1578     2000  3FFF               	dw	16383
  1579                           
  1580                           ;Config register IDLOC1 @ 0x2001
  1581                           ;	unspecified, using default values
  1582     2001                     	org	8193
  1583     2001  3FFF               	dw	16383
  1584                           
  1585                           ;Config register IDLOC2 @ 0x2002
  1586                           ;	unspecified, using default values
  1587     2002                     	org	8194
  1588     2002  3FFF               	dw	16383
  1589                           
  1590                           ;Config register IDLOC3 @ 0x2003
  1591                           ;	unspecified, using default values
  1592     2003                     	org	8195
  1593     2003  3FFF               	dw	16383
  1594                           
  1595                           	psect	config
  1596                           
  1597                           ;Config register CONFIG @ 0x2007
  1598                           ;	Oscillator Selection bits
  1599                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1600                           ;	Watchdog Timer Enable bit
  1601                           ;	WDTE = OFF, WDT disabled
  1602                           ;	Power-up Timer Enable bit
  1603                           ;	PWRTE = ON, PWRT enabled
  1604                           ;	RA5/MCLR/VPP Pin Function Select bit
  1605                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  1606                           ;	Brown-out Detect Enable bit
  1607                           ;	BOREN = ON, BOD enabled
  1608                           ;	Low-Voltage Programming Enable bit
  1609                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1610                           ;	Data EE Memory Code Protection bit
  1611                           ;	CPD = OFF, Data memory code protection off
  1612                           ;	Flash Program Memory Code Protection bit
  1613                           ;	CP = OFF, Code protection off
  1614     2007                     	org	8199
  1615     2007  3F61               	dw	16225

Data Sizes:
    Strings     72
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      7      27
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    strcmp@l	PTR const unsigned char  size(1) Largest target is 20
		 -> cadena(BANK0[20]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[3]), STR_4(CODE[6]), 

    Uart_Read_String@Buf	PTR unsigned char  size(1) Largest target is 20
		 -> cadena(BANK0[20]), 

    Uart_Send_String@INFO	PTR unsigned char  size(1) Largest target is 18
		 -> STR_10(CODE[3]), STR_5(CODE[5]), STR_6(CODE[18]), STR_7(CODE[14]), 
		 -> STR_8(CODE[15]), STR_9(CODE[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _RX_DATO in COMMON

    _RX_DATO->_Uart_Read_String

Critical Paths under _main in BANK0

    _main->_Uart_Send_String
    _Uart_Send_String->_Uart_Send_Char

Critical Paths under _RX_DATO in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RX_DATO in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RX_DATO in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     223
                                              3 BANK0      4     4      0
                          _Uart_Init
                     _Uart_Send_Char
                   _Uart_Send_String
 ---------------------------------------------------------------------------------
 (1) _Uart_Send_String                                     2     1      1     125
                                              1 BANK0      2     1      1
                     _Uart_Send_Char
 ---------------------------------------------------------------------------------
 (2) _Uart_Send_Char                                       1     1      0      29
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Uart_Init                                            2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _RX_DATO                                              4     4      0     298
                                              7 COMMON     4     4      0
                   _Uart_Read_String
                             _strcmp
 ---------------------------------------------------------------------------------
 (5) _strcmp                                               4     2      2     116
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Uart_Read_String                                     7     4      3     182
                                              0 COMMON     7     4      3
                          _Uart_Read
 ---------------------------------------------------------------------------------
 (5) _Uart_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Uart_Init
   _Uart_Send_Char
   _Uart_Send_String
     _Uart_Send_Char

 _RX_DATO (ROOT)
   _Uart_Read_String
     _Uart_Read
   _strcmp

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            48      0       0      0.0%
COMMON              14     11      11     78.6%
BANK0               80      7      27     33.8%
BANK1               80      0       0      0.0%
BANK2               48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      38      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Nov 02 22:05:15 2024

                       pc 0002                        l43 0031                        l72 022F  
                      l75 0259                        l84 0246                        l78 0263  
                      fsr 0004                       l901 00E3                       l831 0230  
                     l911 00F3                       l903 00E8                       l833 0234  
                     l921 011B                       l913 00F5                       l905 00EA  
                     l827 0213                       l835 0239                       l923 011E  
                     l915 00FA                       l907 00EC                       l851 0019  
                     l829 021E                       l837 023D                       l925 0129  
                     l917 0109                       l909 00EE                       l861 0026  
                     l853 001F                       l927 012C                       l919 010C  
                     l871 0032                       l863 0027                       l855 0021  
                     l793 0259                       l881 007B                       l873 0041  
                     l865 002E                       l857 0024                       l849 0016  
                     l795 025F                       l891 00A7                       l883 0081  
                     l875 0053                       l859 0025                       l893 00B6  
                     l885 0090                       l877 0065                       l895 00CA  
                     l887 0095                       l879 0077                       l897 00DC  
                     l889 00A4                       l899 00E1                       u200 0246  
                     u201 0245                       u140 025F                       u141 025E  
                     u240 0081                       u241 0080                       u307 009D  
                     u317 00AF                       u190 021E                       u191 021D  
                     u327 00C3                       u337 00D5                       u257 003A  
                     u347 0102                       u267 004C                       u357 0114  
                     u277 005E                       u367 0124                       u287 0070  
                     u377 0132                       u297 0089                       fsr0 0004  
                     indf 0000                      STR_1 0184                      STR_2 0184  
                    STR_3 0179                      STR_4 0179                      STR_5 017F  
                    STR_6 013F                      STR_7 0160                      STR_8 0151  
                    STR_9 016E                      i1l37 01B2                      i1l38 01B5  
                    i1l90 0253                      i1l91 0255                      i1l87 0247  
                    i1l89 024D                      i1l97 01EA  __end_of_Uart_Read_String 01EB  
                    u2_20 024D                      u2_21 024C                      u3_20 0251  
                    u3_21 0250                      _main 0016                      btemp 007E  
         __end_of_RX_DATO 01C0                      start 000E                     ?_main 0070  
                   STR_10 014E                     _CMCON 001F                     i1l801 01C4  
                   i1l811 01E3                     i1l803 01CC                     i1l653 0247  
                   i1l813 01EA                     i1l805 01D2                     i1l821 01FD  
                   i1l655 0251                     i1l647 0212                     i1l823 0204  
                   i1l815 01EB                     i1l657 0254                     i1l809 01DD  
                   i1l817 01EC                     i1l841 018D                     i1l819 01F0  
                   i1l843 019F                     i1l845 01A3                     i1l847 01AE  
                   i1l839 0187                     i1l797 01C0                     i1l799 01C2  
                   _RCREG 001A                     u21_20 018D                     u21_21 018C  
   Uart_Read_String@s_buf 0071                     u22_20 019F                     u22_21 019E  
                   u15_20 01DC                     u23_20 01AE                     u15_21 01DB  
                   u23_21 01AD                     u15_25 01D8                     u16_20 01E3  
                   u16_21 01E2                     u17_20 01FD                     u17_21 01FC  
                   u18_20 0204                     u18_21 0203                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _TRISA 0085  
                   _TRISB 0086                     _TXREG 0019                     main@a 003A  
                   pclath 000A  __end_of_Uart_Send_String 0247                     status 0003  
                   wtemp0 007E           __initialization 000F              __end_of_main 0139  
                  ??_main 0037                 ??_RX_DATO 0077                    _cadena 0020  
          _Uart_Send_Char 0256                    _strcmp 01EB                    saved_w 007E  
 __end_of__initialization 0014            __pcstackCOMMON 0070       Uart_Read_String@Buf 0070  
  __end_of_Uart_Send_Char 0264            _OPTION_REGbits 0081                __pbssBANK0 0020  
       ?_Uart_Read_String 0070         __end_of_Uart_Init 0230         __end_of_Uart_Read 0256  
      ??_Uart_Read_String 0073                __pmaintext 0016                __pintentry 0004  
         ?_Uart_Send_Char 0070                   ?_strcmp 0070                __stringtab 0139  
                 _RX_DATO 0187         ?_Uart_Send_String 0035        ??_Uart_Send_String 0036  
                 __ptext1 0230                   __ptext2 0256                   __ptext3 0213  
                 __ptext4 0187                   __ptext5 01EB                   __ptext6 01C0  
                 __ptext7 0247                   clrloop0 0265      end_of_initialization 0014  
               _RCSTAbits 0018                   strcmp@l 0070                   strcmp@r 0071  
               _PORTBbits 0006                 _TRISBbits 0086                 _TXSTAbits 0098  
          __end_of_strcmp 0213       start_initialization 000F         Uart_Read_String@c 0074  
      Uart_Send_Char@INFO 0034          ??_Uart_Send_Char 0034                 _Uart_Init 0213  
               _Uart_Read 0247                  ??_strcmp 0072                 ___latbits 0000  
           __pcstackBANK0 0034                  ?_RX_DATO 0070                ?_Uart_Init 0034  
              ?_Uart_Read 0070                 __pstrings 0139          Uart_Init@baudios 0034  
       interrupt_function 0004                 clear_ram0 0264  Uart_Read_String@cont_buf 0075  
                _PIE1bits 008C                  _PIR1bits 000C               __stringbase 013E  
             ??_Uart_Init 0036               ??_Uart_Read 0070          _Uart_Read_String 01C0  
      __end_of__stringtab 013F      Uart_Send_String@INFO 0035         Uart_Send_String@W 0036  
        _Uart_Send_String 0230                _INTCONbits 000B                  intlevel1 0000  
               stringcode 0139                  stringdir 0139                  stringtab 0139  
